      PROGRAM MMMIEA
C THIS PROGRAM CALCULATES MIE COEFFICIENTS (SCATTERING COEFFICIENTS AN AND BN,
C EFFICIENCIES QSCA, QEXT AND QABS, ASYMMETRY FACTOR GCOS) AND RELATES THEM
C TO PARTICLE CLOUD PROPERTIES (EXTINCTION COEFFICIENT BETA, ABSORPTION
C COEFFICIENT KAPPA, SCATTERING COEFFICIENT SIGMA, AYMMETRY FACTOR GCOS,
C SCATTERING PHASE FUNCTION PHASE, AND PHASE FUNCTION EXPANSION COEFFICIENTS
C ATOT)
C
      PARAMETER (NETAMAX=10, MAXN=500, MAXI=513)
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*8 AN(MAXN),XMIE(MAXI),QSC(MAXI),QEX(MAXI),ANN(MAXI,MAXN),
     2     XL(30),XR(30),QSCAL(30),QSCAR(30),QEXTL(30),QEXTR(30),
     2     ANL(30,MAXN),ANR(30,MAXN),SS(MAXN),KAPPA(30),SIGMA(30),
     3     BETA(30),ATOT(30,MAXN),NPV,KAPP,QSCA,QEXT,ER(MAXN),PHASE(30),
     4     GCOSL(30),GCOSR(30),GCO(MAXI),GCOSC(30),ETAM(30)
      INTEGER NM(MAXI),NML(30),NMR(30)
      COMPLEX*16 CIR
C
      FR(R)=AMG*R**ALMG*DEXP(-BMG*R**GAMG)
      EPS=.002D0
      PI=4.D0*DATAN(1.D0)
      LU=6
      NETA=1
      OPEN(UNIT=8,FILE='MIE.DAT')
      OPEN(UNIT=LU,FILE='MIEA.RES')
C
C
C INPUT PARAMETERS:
C
C CIR=COMPLEX INDEX OF REFRACTION
C IDSTF=1: SINGLE PARTICLE SIZE; =2: MODIFIED GAMMA DISTRIBUTION
C IETA=1: SINGLE WAVENUMBER; =2: WAVE NUMBER SPECTRUM
C IPRNT=1: PRINT ONLY FINAL RESULTS; =2: ALSO INTERMEDIATE INTEGRATIONS
C
C RMIN, RMAX= MINIMUM AND MAXIMUM PARTICLE SIZE IN GAMMA DISTRIBUTION
C             (IN MICROMETERS)
C AMG,BMG,ALMG,GAMG= CONSTANTS IN GAMMA DISTRIBUTION, SEE FORMULA ABOVE;
C     UNITS: AMG[CM^-3 MICRON^(ALMG+1)], ALMG[-], BMG[MICRON^-1], GAMG[-]
C NPV= NUMBER OF PARTICLES PER UNIT VOLUME (IN PARTICLES PER CUBIC CM)
C ETA= WAVENUMBER IF SINGLE WAVENUMBER IS CONSIDERED (IN CM-1)
C ETMIN, ETMAX= MINIMUM AND MAXIMUM ETA TO BE CONSIDERED
C NETA= NUMBER OF WAVENUMBERS TO BE CONSIDERED (EQUALLY SPACED BETWEEN ETMIN
C       AND ETMAX)
C ERRP= MAXIMUM ERROR ALLOWED FOR ABSORPTION/SCATTERING COEFFICIENTS
C     OR ASYMMETRY FACTOR (IN %)
C ERRA= DIGITS OF ACCURACY DESIRED IN A_N FOR PHASE FUNCTION (IN 10**-DIGITS)
C
C NOTES:
C  -- PRESENTLY, NETA MAY NOT EXCEED THE VALUE 10. THIS MAY BE CHANGED BY
C        INCREASING THE VALUE OF NETAMAX BELOW, AS WELL AS EVERY VARIABLE
C        DIMENSIONED TO 10 (MAIN PROGRAM ONLY)
C
C  -- PRESENTLY, THE MAXIMUM SIZE PARAMETER MAY NOT EXCEED 300 (APPROX).
C        THIS MAY BE CHANGED BY INCREASING THE VALUE FOR MAXN BELOW, AS WELL AS
C        EVERY VARIABLE DIMENSIONED TO 500 (MAIN PROGRAM AND SUBROUTINES). MAXN
C        MAY BE ESTIMATED FROM
C                 MAXN=1.5*X+5.*(REAL(CIR)+DLOG(1.+X*X/50.))+3
C
C  -- PRESENTLY, THE MAXIMUM NUMBER OF NODES IN INTEGRATION OVER SIZE
C        PARAMETERS (OR OVER DISTRIBUTION FUNCTION) MAY NOT EXCEED 513.
C        THIS MAY BE CHANGED BY INCREASING THE VALUE FOR MAXI ABOVE.
      HFMAXNX=(MAXI-1)/2
C
      READ(8,*) IDSTF,IETA,IPRNT,CIR
      IF(IDSTF.EQ.1) READ(8,*) RPART,NPV
      IF(IDSTF.EQ.2) READ(8,*) RMIN,RMAX,AMG,BMG,ALMG,GAMG,NPV
      IF(IETA.EQ.1)  READ(8,*) ETA
      IF(IETA.EQ.2)  READ(8,*) ETMIN,ETMAX,NETA
      IF(IDSTF*IETA.NE.1) READ(8,*) ERRP,ERRA
      IF(NETA.LE.NETAMAX) GOTO 1000
      WRITE(*,1010)
      STOP
C
C PARAMETERS FOR SINGLE PARTICLE/SINGLE WAVENUMBER
C
 1000 IF(IDSTF*IETA.NE.1) GOTO 1040
      XSPSE=2.D0*PI*RPART*ETA*1D-4
      write(*,*) 'Calling FMIE with x =',xspse
      CALL FMIE(MAXN,CIR,XSPSE,QSCA,QEXT,GCOS,AN,NMAX)
      CONST=PI*RPART**2*NPV*1D-8
      BET=CONST*QEXT
      SIGM=CONST*QSCA
      KAPP=BET-SIGM
      WRITE(LU,1900)
      WRITE(LU,2000) RPART,CIR,NPV,XSPSE
      DO 1030 N=1,NMAX
 1030 ATOT(1,N)=AN(N)
      NETA=1
      XMIE(1)=XSPSE
      ETAM(1)=ETA
      KAPPA(1)=KAPP
      SIGMA(1)=SIGM
      BETA(1)=BET
      GCOSC(1)=GCOS
      NMAX2=NMAX+2
      GOTO 1310
C
C PARAMETERS FOR SINGLE PARTICLE/WAVENUMBER SPECTRUM
C
 1040 IF(IDSTF.NE.1) GOTO 1100
      XMIN=2.D0*PI*RPART*ETMIN*1D-4
      XMAX=2.D0*PI*RPART*ETMAX*1D-4
      DELX=(XMAX-XMIN)/(NETA-1.D0)
      DETA=(ETMAX-ETMIN)/(NETA-1.D0)
      CONST=PI*RPART**2*NPV*1D-8
      WRITE(LU,2010) RPART,CIR,NPV,ETMIN,ETMAX,NETA
C
      DO 1050 IET=1,NETA
      XMIE(IET)=XMIN+DELX*(IET-1)
      ETAM(IET)=ETMIN+DETA*(IET-1)
      write(*,*) 'Calling FMIE with x =',xmie(iet)
      CALL FMIE(MAXN,CIR,XMIE(IET),QSCA,QEXT,GCOS,AN,NMAX)
      SIGMA(IET)=CONST*QSCA
      BETA(IET)=CONST*QEXT
      KAPPA(IET)=BETA(IET)-SIGMA(IET)
      GCOSC(IET)=GCOS
      DO 1045 N=1,NMAX
 1045 ATOT(IET,N)=AN(N)
 1050 CONTINUE
      NMAX2=NMAX+2
      GOTO 1310
C
C PARAMETERS FOR PARTICLE DISTRIBUTION/SINGLE WAVENUMBER
C
 1100 IF(IETA.NE.1) GOTO 1110
      ETMIN=ETA
      ETMAX=ETA
      NETA=1
      DETA=0.D0
      WRITE(LU,2020) ETA
      GOTO 1120
C
C PARAMETERS FOR PARTICLE DISTRIBUTION/WAVENUMBER SPECTRUM
C
 1110 DETA=(ETMAX-ETMIN)/(NETA-1)
      WRITE(LU,2030) ETMIN,ETMAX,NETA
 1120 DO 1125  IET=1,NETA
      ETAM(IET)=ETMIN+DETA*(IET-1)
      BETA(IET)=0.D0
      SIGMA(IET)=0.D0
      GCOSC(IET)=0.D0
      DO 1125 N=1,MAXN
 1125 ATOT(IET,N)=0.D0
      WRITE(LU,2040) RMIN,RMAX,CIR,NPV,AMG,ALMG,BMG,GAMG
      IMIN=0
      IMAX=0
      R1MIN=RMIN
      R1MAX=RMAX
      IF(BMG*GAMG.EQ.0.D0) GOTO 1175
C
      FRMAX=(ALMG/GAMG/BMG)**(1.D0/GAMG)
      R1=1.D0
      KK=1
      C1=BMG*FRMAX**GAMG/(2.D0+ALMG)
      EAL=EPS**(1.D0/(2.D0+ALMG))
 1130 R2=EAL*DEXP(C1*(R1-1.D0))
      IF(1.D0-R2/R1.LT.1.D-4) GOTO 1140
      KK=KK+1
      R1=R2
      IF(KK.LE.30) GOTO 1130
      WRITE(LU,2060)
      STOP
C
 1140 R3=R2*FRMAX
      IMIN=RMIN/R3
      IMIN=1/(1+IMIN)
      R1MIN=(1-IMIN)*RMIN+IMIN*R3
C
      C2=1.D0-DLOG(EAL)/C1
      R1=1.D0
      KK=1
 1150 R2=(C2+DLOG(R1)/C1)**(1.D0/GAMG)
      IF(R2/R1-1.D0.LT.1.D-4) GOTO 1160
      KK=KK+1
      R1=R2
      IF(KK.LE.30) GOTO 1150
      WRITE(LU,2060)
      STOP
C
 1160 R3=R2*FRMAX
      IMAX=R3/RMAX
      IMAX=1/(1+IMAX)
      R1MAX=(1-IMAX)*RMAX+IMAX*R3
 1175 XMIN=2.D-4*PI*R1MIN*ETMIN
      XMAX=2.D-4*PI*R1MAX*ETMAX
      JMIN=XMIN/4
      JMAX=XMAX/4+1
      XMIN=(1-IMIN)*XMIN+IMIN*4*JMIN
      XMAX=(1-IMAX)*XMAX+4*IMAX*JMAX
      WRITE(LU,2050) XMIN,XMAX
C
C PARAMETERS FOR SMALLEST X IF NOT IN GRID
C
      IF(IMIN.NE.0) GOTO 1190
      DO 1185 IET=1,NETA
      XL(IET)=2.D-4*PI*RMIN*ETAM(IET)
      write(*,*) 'Calling FMIE with x =',xl(iet)
      CALL FMIE(MAXN,CIR,XL(IET),QSCAL(IET),QEXTL(IET),GCOSL(IET),AN
     1                                                          ,NMAX)
      NML(IET)=NMAX
      DO 1180 N=1,NMAX
 1180 ANL(IET,N)=AN(N)
      NMAX1=NMAX+1
      DO 1185 N=NMAX1,MAXN
 1185 ANL(IET,N)=0.D0
C
C PARAMETERS FOR LARGEST X IF NOT IN GRID
C
 1190 IF(IMAX.NE.0) GOTO 1210
      DO 1205 IET=1,NETA
      XR(IET)=2.D-4*PI*RMAX*ETAM(IET)
      write(*,*) 'Calling FMIE with x =',xr(iet)
      CALL FMIE(MAXN,CIR,XR(IET),QSCAR(IET),QEXTR(IET),GCOSR(IET),AN
     1                                                         ,NMAX)
      NMR(IET)=NMAX
      DO 1200 N=1,NMAX
 1200 ANR(IET,N)=AN(N)
      NMAX1=NMAX+1
      DO 1205 N=NMAX1,MAXN
 1205 ANR(IET,N)=0.D0
C
C PARAMETERS FOR ALL X IN REGULAR GRID
C
 1210 NX=8
      QSC(1)=0.D0
      QEX(1)=0.D0
      GCO(1)=0.D0
      AN(1)=0.D0
      AN(2)=.5D0
      NMAX=2
 1215 DX=4.D0*(JMAX-JMIN)/NX
      IX1=2-8/NX
      NX1=NX+8/NX
      DO 1225 I=IX1,NX1,IX1
      XMIE(I)=4.D0*JMIN+(I-1)*DX
      IF(XMIE(I).LT.1D-20) GOTO 1217
      write(*,*) 'Calling FMIE with x =',xmie(i)
      CALL FMIE(MAXN,CIR,XMIE(I),QSC(I),QEX(I),GCO(I),AN,NMAX)
 1217 NM(I)=NMAX
      DO 1220 N=1,NMAX
 1220 ANN(I,N)=AN(N)
      NMAX1=NMAX+1
      DO 1225 N=NMAX1,MAXN
 1225 ANN(I,N)=0.D0
C
      ERRORA=0.D0
      ERROR=0.D0
      DO 1300 IET=1,NETA
      IXL=1
      IXR=NX+1
      NMAX2=NM(IXR)+2
      IF(IMAX.EQ.0)NMAX2=NMR(IET)+2
      N3=NMAX2+1
      DO 1230 N=1,N3
 1230 SS(N)=0.D0
      IF(IMIN.NE.0) GOTO 1250
C
C CALCULATE INTEGRALS  FOR LEFT TAIL IF NOT IN GRID
C
      I11=(XL(IET)-XMIE(1))/DX+1
      IXL=((I11-1)/4)*4+5
      F1X1=XMIE(I11+1)**2*FR(XMIE(I11+1)/(2.D0*PI*ETAM(IET)))
      F1XL=XL(IET)**2*FR(RMIN)
      F2XL=F1XL*QEXTL(IET)
      F2X1=F1X1*QEX(I11+1)
      F1XL=F1XL*QSCAL(IET)
      F1X1=F1X1*QSC(I11+1)
      FFXL=F1XL*GCOSL(IET)
      FFX1=F1X1*GCO(I11+1)
      SS(1)=SS(1)+F1XL*(XMIE(I11+1)-XL(IET))/2.D0
     1     +F1X1*(XMIE(I11)-XL(IET))/2.D0
      SS(2)=SS(2)+F2XL*(XMIE(I11+1)-XL(IET))/2.D0
     1     +F2X1*(XMIE(I11)-XL(IET))/2.D0
      SS(N3)=SS(N3)+FFXL*(XMIE(I11+1)-XL(IET))/2.D0
     1     +FFX1*(XMIE(I11)-XL(IET))/2.D0
      DO 1235 N=3,NMAX2
      FNXL=F1XL*ANL(IET,N-2)
      FNX1=F1X1*ANN(I11+1,N-2)
 1235 SS(N)=SS(N)+FNXL*(XMIE(I11+1)-XL(IET))/2.D0
     1     +FNX1*(XMIE(I11)-XL(IET))/2.D0
      I111=I11+1
      DO 1240 IL=I111,IXL
      F1X=XMIE(IL)**2*FR(XMIE(IL)/(2.D0*PI*ETAM(IET)))
      F2X=F1X*QEX(IL)
      F1X=F1X*QSC(IL)
      FFX=F1X*GCO(IL)
      SS(1)=SS(1)+(2-IL/IXL)*DX*F1X/2.D0
      SS(2)=SS(2)+(2-IL/IXL)*DX*F2X/2.D0
      SS(N3)=SS(N3)+(2-IL/IXL)*DX*FFX/2.D0
      DO 1240 N=3,NMAX2
 1240 SS(N)=SS(N)+(2-IL/IXL)*DX*F1X*ANN(IL,N-2)/2.D0
C
C CALCULATE INTEGRALS FOR RIGHT TAIL IF NOT IN GRID
C
 1250 IF(IMAX.NE.0) GOTO 1280
      I22=(XR(IET)-XMIE(1)-1D-10)/DX+2
      IXR=((I22-2)/4)*4+1
      F1XR=XR(IET)**2*FR(RMAX)
      F1X2=XMIE(I22-1)**2*FR(XMIE(I22-1)/(2.D0*PI*ETAM(IET)))
      F2XR=F1XR*QEXTR(IET)
      F2X2=F1X2*QEX(I22-1)
      F1XR=F1XR*QSCAR(IET)
      F1X2=F1X2*QSC(I22-1)
      FFXR=F1XR*GCOSR(IET)
      FFX2=F1X2*GCO(I22-1)
      SS(1)=SS(1)+F1XR*(XR(IET)-XMIE(I22-1))/2.D0
     1           +F1X2*(XR(IET)-XMIE(I22))/2.D0
      SS(2)=SS(2)+F2XR*(XR(IET)-XMIE(I22-1))/2.D0
     1           +F2X2*(XR(IET)-XMIE(I22))/2.D0
      SS(N3)=SS(N3)+FFXR*(XR(IET)-XMIE(I22-1))/2.D0
     1           +FFX2*(XR(IET)-XMIE(I22))/2.D0
      DO 1260 N=3,NMAX2
      FNXR=F1XR*ANR(IET,N-2)
      FNX2=F1X2*ANN(I22-1,N-2)
 1260 SS(N)=SS(N)+FNXR*(XR(IET)-XMIE(I22-1))/2.D0
     1           +FNX2*(XR(IET)-XMIE(I22))/2.D0
      I222=I22-1
      DO 1270 IR=IXR,I222
      F1X=XMIE(IR)**2*FR(XMIE(IR)/(2.D0*PI*ETAM(IET)))
      F2X=F1X*QEX(IR)
      F1X=F1X*QSC(IR)
      FFX=F1X*GCO(IR)
      SS(1)=SS(1)+(2-IXR/IR)*DX*F1X/2.D0
      SS(2)=SS(2)+(2-IXR/IR)*DX*F2X/2.D0
      SS(N3)=SS(N3)+(2-IXR/IR)*DX*FFX/2.D0
      DO 1270 N=3,NMAX2
 1270 SS(N)=SS(N)+(2-IXR/IR)*DX*F1X*ANN(IR,N-2)/2.D0
C
C CALCULATE INTEGRALS FOR REGULAR GRID
C
 1280 NINT=(IXR-IXL)/4
      CONST=2.D0*DX/45.D0
      CC=2.D-4*PI*ETAM(IET)
      IF(NINT.EQ.0) GOTO 1295
      DO 1290 IX=1,NINT
      IXX=IXL+4*IX-4
      F1X1= 7.D0*CONST*XMIE(IXX)**2*FR(XMIE(IXX)/CC)
      F1X2=32.D0*CONST*XMIE(IXX+1)**2*FR(XMIE(IXX+1)/CC)
      F1X3=12.D0*CONST*XMIE(IXX+2)**2*FR(XMIE(IXX+2)/CC)
      F1X4=32.D0*CONST*XMIE(IXX+3)**2*FR(XMIE(IXX+3)/CC)
      F1X5= 7.D0*CONST*XMIE(IXX+4)**2*FR(XMIE(IXX+4)/CC)
      F2X1=F1X1*QEX(IXX)
      F2X2=F1X2*QEX(IXX+1)
      F2X3=F1X3*QEX(IXX+2)
      F2X4=F1X4*QEX(IXX+3)
      F2X5=F1X5*QEX(IXX+4)
      F1X1=F1X1*QSC(IXX)
      F1X2=F1X2*QSC(IXX+1)
      F1X3=F1X3*QSC(IXX+2)
      F1X4=F1X4*QSC(IXX+3)
      F1X5=F1X5*QSC(IXX+4)
      FFX1=F1X1*GCO(IXX)
      FFX2=F1X2*GCO(IXX+1)
      FFX3=F1X3*GCO(IXX+2)
      FFX4=F1X4*GCO(IXX+3)
      FFX5=F1X5*GCO(IXX+4)
      SS(1)=SS(1)+F1X1+F1X2+F1X3+F1X4+F1X5
      SS(2)=SS(2)+F2X1+F2X2+F2X3+F2X4+F2X5
      SS(N3)=SS(N3)+FFX1+FFX2+FFX3+FFX4+FFX5
      DO 1290 N=3,NMAX2
 1290 SS(N)=SS(N)+F1X1*ANN(IXX,N-2)+F1X2*ANN(IXX+1,N-2)+
     1      F1X3*ANN(IXX+2,N-2)+F1X4*ANN(IXX+3,N-2)+F1X5*ANN(IXX+4,N-2)
 1295 CONST=8.D0*PI*PI*ETAM(IET)**3
      SIG=SS(1)/CONST*1E+4
      ER(1)=ABS(1.D0-SIGMA(IET)/SIG)*100.D0
      IF(ERROR.LT.ER(1)) ERROR=ER(1)
      SIGMA(IET)=SIG
      BET=SS(2)/CONST*1E+4
      ER(2)=ABS(1.D0-BETA(IET)/BET)*100.D0
      IF(ERROR.LT.ER(2)) ERROR=ER(2)
      BETA(IET)=BET
      KAPPA(IET)=BET-SIG
      GC=SS(N3)/SS(1)
      ER(N3)=ABS(1.D0-GCOSC(IET)/GC)*100.D0
      IF(ERROR.LT.ER(N3)) ERROR=ER(N3)
      GCOSC(IET)=GC
      DO 1300 N=3,NMAX2
      ANTOT=SS(N)/SS(1)
      ER(N)=ABS(ANTOT-ATOT(IET,N-2))
      ERNR=ER(N)/ANTOT
      IF(ERRORA.LT.ER(N).AND.ERRP.LT.ERNR) ERRORA=ER(N)
 1300 ATOT(IET,N-2)=ANTOT
C
C SETTING UP A FINER GRID FOR REFINED INTEGRATION
C
      IF(ERROR.LT.ERRP.AND.ERRORA.LT.ERRA) GOTO 1310
      IF(NX.LE.HFMAXNX) GOTO 1305
      NMAX=NMAX2-2
      WRITE(LU,2150) ERROR,ER(1),ER(2),ER(N3),(N,ER(N+2),N=1,NMAX)
      WRITE(LU,2145)
      GOTO 1310
C
C PRINT OUT INTERMEDIATE RESULTS IF DESIRED
C
 1305 IF(IPRNT.EQ.1) GOTO 1335
      IN=(NETA-1)/10+1
      WRITE(LU,2090) IXR,DX
      DO 1325 II=1,IN
      I1=10*(II-1)+1
      I2=(II/IN)*NETA+(1-II/IN)*10*II
      WRITE(LU,2100) (ETAM(I),I=I1,I2)
      WRITE(LU,2110) (KAPPA(I),I=I1,I2)
      WRITE(LU,2120) (SIGMA(I),I=I1,I2)
      WRITE(LU,2130) (BETA(I),I=I1,I2)
      WRITE(LU,2135) (GCOSC(I),I=I1,I2)
      NMAX=NMAX2-2
      DO 1325 N=1,NMAX
 1325 WRITE(LU,2140) N,(ATOT(I,N),I=I1,I2)
      WRITE(LU,2145)
 1335 DO 1315 N=1,NX
      N1=NX+2-N
      N2=2*(NX-N)+3
      XMIE(N2)=XMIE(N1)
      QSC(N2)=QSC(N1)
      GCO(N2)=GCO(N1)
      QEX(N2)=QEX(N1)
      NMAX=NM(N2)
      NM(N2)=NM(N1)
      DO 1315 NN=1,NMAX
 1315 ANN(N2,NN)=ANN(N1,NN)
      NX=2*NX
      GOTO 1215
C
C PRINT OUT RESULTS
C
 1310 IN=(NETA-1)/10+1
      WRITE(LU,2090) IXR,DX
      DO 1320 II=1,IN
      I1=10*(II-1)+1
      I2=(II/IN)*NETA+(1-II/IN)*10*II
      WRITE(LU,2100) (ETAM(I),I=I1,I2)
      IF(IDSTF.EQ.1) WRITE(LU,2070)(XMIE(I),I=I1,I2)
      WRITE(LU,2110) (KAPPA(I),I=I1,I2)
      WRITE(LU,2120) (SIGMA(I),I=I1,I2)
      WRITE(LU,2130) (BETA(I),I=I1,I2)
      WRITE(LU,2135) (GCOSC(I),I=I1,I2)
      NMAX=NMAX2-2
      DO 1330 N=1,NMAX
 1330 WRITE(LU,2140) N,(ATOT(I,N),I=I1,I2)
      WRITE(LU,2160)
      DO 1320 ITH=1,37
      CTH=COS(PI*(ITH-1.D0)/36.D0)
      STH=SIN(PI/36.D0*(ITH-1.D0))
      ITHETA=5*(ITH-1)
      PM2=1.D0
      PM1=CTH
      DO 1340 IET=I1,I2
 1340 PHASE(IET)=1.D0+ATOT(IET,1)*PM1
      DO 1350 N=2,NMAX
      P=(2.D0-1.D0/N)*CTH*PM1-(1.D0-1.D0/N)*PM2
      PM2=PM1
      PM1=P
      DO 1350 IET=I1,I2
 1350 PHASE(IET)=PHASE(IET)+ATOT(IET,N)*P
 1320 WRITE(LU,2165) ITHETA,(PHASE(IET),IET=I1,I2)
      STOP
C
 1010 FORMAT(5X,40HNUMBER OF WAVENUMBERS MUST BE < OR = 10,,
     1          16H PROGRAM ABORTED)
 1900 FORMAT(5X,48HPARAMETERS FOR SINGLE PARTICLE/SINGLE WAVELENGTH
     1          /5X,48H************************************************
     2///)
 2000 FORMAT(//5X,25HPARTICLE RADIUS        = ,E10.3,7H MICROM/
     1       5X,24HREFRACTIVE INDEX       = ,F9.5,1H-,1PE11.5,1Hi/
     2       5X,25HPARTICLE DENSITY       = ,E10.3,10H PER CM**3/
     3       5X,25HX = 2*PI*R*ETA         = ,F10.4/)
 2010 FORMAT(5X,50HPARAMETERS FOR SINGLE PARTICLE/WAVENUMBER SPECTRUM/
     1       5X,50H**************************************************///
     X       5X,25HPARTICLE RADIUS        = ,E10.3,7H MICROM/
     1       5X,24HREFRACTIVE INDEX       = ,F9.5,1H-,1PE11.5,1Hi/
     2       5X,25HPARTICLE DENSITY       = ,E10.3,10H PER CM**3/
     4       5X,25HMINIMUM WAVENUMBER     = ,E10.3,5H CM-1/
     5       5X,25HMAXIMUM WAVENUMBER     = ,E10.3,5H CM-1/
     6       5X,24HNUMBER OF WAVENUMBERS  =,I3///)
 2020 FORMAT(5X,54HPARAMETERS FOR PARTICLE DISTRIBUTION/SINGLE WAVENUMBE
     2R/
     1           5X,54H*************************************************
     3*****//5X,24HWAVENUMBER             =,E10.3,5H CM-1)
 2030 FORMAT(    5X,56HPARAMETERS FOR PARTICLE DISTRIBUTION/WAVENUMBER S
     1PECTRUM/
     2           5X,56H*************************************************
     3*******//
     4       5X,24HMINIMUM WAVENUMBER     =,E10.3,5H CM-1/
     5       5X,24HMAXIMUM WAVENUMBER     =,E10.3,5H CM-1/
     6       5X,24HNUMBER OF WAVENUMBERS  =,I3///)
 2040 FORMAT(5X,24HMINIMUM PARTICLE RADIUS=,E10.3,7H MICROM/
     1       5X,24HMAXIMUM PARTICLE RADIUS=,E10.3,7H MICROM/
     1       5X,24HREFRACTIVE INDEX       =,F8.5,1PE12.5,1Hi/
     2       5X,24HPARTICLE DENSITY       =,E10.3,10H PER CM**3/
     3       5X,28HDISTRIBUTION FUNCTION: N(R)=,E11.5,4H*R**,0PF3.1,
     1       6H*EXP(-,E11.5,4H*R**,F3.1,1H)///)
 2050 FORMAT(5X,33HMIE-PARAMETERS ARE CALCULATED FOR,F10.5,
     1       7H  < X <,F10.5//)
 2060 FORMAT(5X,44HCALCULATIONS FOR RMIN/RMAX DID NOT CONVERGE,,
     1          16H PROGRAM ABORTED)
 2070 FORMAT(2X,12HX=2*PI*R*ETA,3X,1P10E10.3)
 2090 FORMAT(1X,16HINTEGRATION WITH,I4,18H NODES, AND A DX =,F6.3/)
 2100 FORMAT(2X,10HETA (CM-1),5X,1P10E10.3/)
 2110 FORMAT(2X,12HKAPPA (CM-1),3X,1P10E10.3)
 2120 FORMAT(2X,12HSIGMA (CM-1),3X,1P10E10.3)
 2130 FORMAT(2X,12HBETA  (CM-1),3X,1P10E10.3)
 2135 FORMAT(2X,12HGCOS  ( -- ),3X,1P10E10.3/)
 2140 FORMAT(8X,2HA(,I3,2H) ,10F10.5)
 2145 FORMAT(///)
 2150 FORMAT(//5X,29HINTEGRATION DID NOT CONVERGE:,
     1            16H MAXIMUM ERROR =,F5.2,1H%///
     2       5X,17HERROR FOR SIGMA :,F5.2,19H%, ERROR FOR BETA :,
     3       F5.2,19H%, ERROR FOR GCOS :,F5.2,1H%/
     4       5X,9HERROR FOR/(5X,2HA(,I3,2H):,F8.5))
 2160 FORMAT(//2X,13HPHASEFUNCTION/2X,21HDEG.              PHI)
 2165 FORMAT(2X,I3,12X,1P10E10.3)
      END
C***********************************************************************
      SUBROUTINE FMIE(MAXN,M,X,QSCA,QEXT,GCOS,AL,JMAX)
      IMPLICIT REAL*8 (A-H,O-Z)
      COMPLEX*16 M,Y,DY(MAXN),G(MAXN),ZETA,A,B
      REAL*8 PSI(MAXN),CHI(MAXN),DX(MAXN),X,VS(3),AR(500),AI(500),
     X     BR(500),BI(500),QSCA,QEXT,AL(MAXN),VW(MAXN,2)
      COMMON AR,AI,BR,BI
C
      DO 60 N=1,MAXN
      AR(N)=0.D0
      AI(N)=0.D0
      BR(N)=0.D0
  60  BI(N)=0.D0
      NMAX=1.5D0*X+5.D0*(REAL(M)+DLOG(1.D0+X*X/50.D0))
      IF(NMAX+3.LE.MAXN) GOTO 100
      WRITE(*,50) NMAX
  50  FORMAT(5X,'LARGEST X TOO LARGE, NMAX =',I3,',  MUST BE <MAXN-3')
      STOP
 100  Y=M*X
      LLMAX=NMAX-1
      DX(NMAX)=(NMAX+1)/X
      DY(NMAX)=(NMAX+1)/Y
      DO 600 I=1,LLMAX
      N=NMAX-I
      DX(N)=(N+1.D0)/X-1.D0/(DX(N+1)+(N+1.D0)/X)
 600  DY(N)=(N+1.D0)/Y-1.D0/(DY(N+1)+(N+1.D0)/Y)
C
      G(1)=CMPLX(.0D0,-1.D0)
      G(1)=1.D0/(1.D0/X-G(1))-1.D0/X
      DO 700 N=2,NMAX
 700  G(N)=1.D0/(N/X-G(N-1))-N/X
C
      LMAX=NMAX-2
      S0=(X/LMAX)**LMAX
      IF(S0.LE.0.D0) S0=1.D-34
      PSI(NMAX)=0.D0
      PSI(NMAX-1)=S0
      SUM=(2.D0*NMAX-1.D0)*PSI(NMAX-1)**2
      DO 200 I=1,LMAX
      N=LLMAX-I
      PSI(N)=(2.D0*N+3.D0)/X*PSI(N+1)-PSI(N+2)
 200  SUM=SUM+(2.D0*N+1.D0)*PSI(N)**2
      PSI0=3.D0/X*PSI(1)-PSI(2)
      SUM=SUM+PSI0**2
      SQ=DSQRT(SUM)
      DO 300 N=1,NMAX
 300  PSI(N)=PSI(N)*X/SQ
C
      CHI(1)=COS(X)/X+SIN(X)
      CHI(2)=3.D0/X*CHI(1)-COS(X)
      DO 400 N=3,NMAX
 400  CHI(N)=(2.D0*N-1.D0)/X*CHI(N-1)-CHI(N-2)
C
C
      QSCA=0.D0
      QEXT=0.D0
      GCOS=0.D0
      DO 500 N=1,NMAX
      ZETA=CMPLX(PSI(N),CHI(N))
      A=PSI(N)/ZETA*((DY(N)-M*DX(N))/(DY(N)-M*G(N)))
      B=PSI(N)/ZETA*((M*DY(N)-DX(N))/(M*DY(N)-G(N)))
      AR(N)=REAL(A)
      BR(N)=REAL(B)
      AI(N)=AIMAG(A)
      BI(N)=AIMAG(B)
      SIZE=AR(N)**2+AI(N)**2+BR(N)**2+BI(N)**2
      QSCA=QSCA+(2.D0*N+1.D0)*SIZE
      QEXT=QEXT+(2*N+1)*(AR(N)+BR(N))
      IF(N.EQ.1) GOTO 500
      GCOS=GCOS+((N*N-1.D0)*(AR(N-1)*AR(N)+AI(N-1)*AI(N)
     1         +BR(N-1)*BR(N)+BI(N-1)*BI(N))+(2.D0*N-1.D0)/(N-1.D0)*
     2         (AR(N-1)*BR(N-1)+AI(N-1)*BI(N-1)))/N
      IF(N.LE.4 .OR. SIZE.GT.1.D-34) GOTO 500
      NMAX=N
      GOTO 510
  500 CONTINUE
  510 GCOS=GCOS*2.D0/QSCA
      QSCA=QSCA*2.D0/X**2
      QEXT=QEXT*2.D0/X**2
      ABSK=QEXT-QSCA
C
C
      JMAX=MAXN-2
      DO 1 J=1,MAXN
      VW(J,1) = 0.D0
    1 VW(J,2) = 0.D0
      VW(1,1) = 4.5D0
      VW(2,1) = 4.5D0
      VS(2) = 4.5D0
      VS(3) = 4.5D0
      AL(1)=4.5D0*V(1,1)+9.D0*W(2,1)
C
      DO 2 K=2,JMAX
      VW(K,2)=(2.D0*K+1.D0)*(K-1.D0)/((K+1.D0)*(2.D0*K-1.D0))*VW(K-1,1)
      VW(K+1,2)=K*K*(K+2.D0)/((K-1.D0)*(K+1.D0)**2)*VW(K,1)
      DO 3 J=1,JMAX
      VW(J,1)=VW(J,2)
    3 VW(J,2)=0.D0
      AL(1)=AL(1)+V(K,K)*VW(K,1)+2.D0*W(K+1,K)*VW(K+1,1)
    2 CONTINUE
      AL(1)=2.D0*AL(1)/(X**2*QSCA)
C
      VS(1) = 1.5D0
C
      DO 5 N = 2,JMAX
      DO 6 J=1,JMAX
    6 VW(J,1)=0.D0
      IF(N.GT.2) VS(1)=(N-1.D0)/(N-2.D0)*VS(1)
      VS(2)=(2.D0*N+1.D0)/(2.D0*N-1.D0)*VS(2)
      VS(3)=(N+2.D0)/(N+1.D0)*VS(3)
      VW(N-1,1)=VS(1)
      VW(N,1)=VS(2)
      VW(N+1,1)=VS(3)
      AL(N)=(2-2/N)*W(N-1,1)*VS(1)+2*V(N,1)*VS(2)+2*W(N+1,1)*VS(3)
C
      DO 10 K=2,JMAX
      N1=K+(N+1)/2-(N/2)
      N3=K+(N/2)-(N-1)/2
      IF(N.LT.2*K-3) GO TO 15
      N3= N-K+3
      IF(N.LT.2*K-1) GO TO 15
      VW(N-K+1,2)=(2.D0*K+1.D0)*(N-K+3.D0)/((K+1.D0)*(2.D0*(N-K)+5.D0))
     1          *VW(N-K+2,1)
      D=2-K/(N-K+1)
      AL(N)=AL(N)+D*V(N-K+1,K)*VW(N-K+1,2)
      IF(N.LT.2*K) GOTO 15
      VW(N-K,2)=K*(N-K)*(N-K+2.D0)*(2.D0*K+1.D0)/((K*K-1.D0)*(N-K+1)
     1          *(2.D0*(N-K)+3.D0))*VW(N-K+1,1)
      D=2-K/(N-K)
      AL(N)=AL(N)+D*W(N-K,K)*VW(N-K,2)
      N1 = N-K+2
   15 N2 = N+K-2
      III=N2/JMAX
      N2=III*JMAX+(1-III)*N2
      DO 20 J=N1,N2,2
      VW(J,2)=(J*(J+1.D0)+K*(K+1.D0)-N*(N+1))**2/((J+N-K+1.D0)
     1        *(J+K+N+1.D0)*(K+N-J)*(J+K-N))*(K-1.D0)/(K+1.D0)
     2        *(2.D0*K+1.D0)/(2.D0*K-1.D0)*VW(J,1)
      D=2-K/J
   20 AL(N)=AL(N)+D*W(J,K)*VW(J,2)
      IF(N+K.GT.JMAX) GOTO 25
      VW(N+K,2)=K*(2.D0*K+1.D0)*((N+K)**2-1.D0)/((K*K-1.D0)*(N+K)
     1         *(2.D0*(N+K)-1.D0))*VW(N+K-1,1)
      AL(N)=AL(N)+2*W(N+K,K)*VW(N+K,2)
   25 N2 = N+K-1
      III=N2/JMAX
      N2=III*JMAX+(1-III)*N2
      DO 30 J=N3,N2,2
      VW(J,2)=(J+K-N)*(J+K+N+1.D0)/((J+K-N-1.D0)*(J+K+N))*VW(J-1,1)
      VW(J,2)=(2.D0*J+1.D0)/(2.D0*J-1.D0)*(J-1.D0)/(J+1.D0)
     1        *(2.D0*K+1.D0)/(2.D0*K-1.D0)*(K-1.D0)/(K+1.D0)*VW(J,2)
      D=2-K/J
   30 AL(N)=AL(N)+D*V(J,K)*VW(J,2)
      DO 40 J=1,JMAX
      VW(J,1)=VW(J,2)
   40 VW(J,2)=0.D0
   10 CONTINUE
      AL(N)=2.D0/(X**2*QSCA)*AL(N)
      IF(N.GE.NMAX .AND. ABS(AL(N)).LT.1.D-4) GOTO 45
    5 CONTINUE
C
   45 JMAX=N
      RETURN
      END
C***********************************************************************
      FUNCTION V(J,K)
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*8 AR(500),AI(500),BR(500),BI(500)
      COMMON AR,AI,BR,BI
      V=AR(J)*BR(K)+AI(J)*BI(K)+AR(K)*BR(J)+AI(K)*BI(J)
      RETURN
      END
      FUNCTION W(J,K)
      REAL*8 AR(500),AI(500),BR(500),BI(500)
      COMMON AR,AI,BR,BI
      W=AR(J)*AR(K)+AI(J)*AI(K)+BR(J)*BR(K)+BI(J)*BI(K)
      RETURN
      END
